<?xml version="1.0" encoding="UTF-8"?>

<!-- =====================================================================
GoalMonitorComponentAi.xml
Generated by fpp-to-xml
====================================================================== -->
<component namespace="MotionActivatedLight" name="GoalMonitor" kind="active">

  <import_port_type>Fw/Cmd/CmdPortAi.xml</import_port_type>
  <import_port_type>Fw/Cmd/CmdRegPortAi.xml</import_port_type>
  <import_port_type>Fw/Cmd/CmdResponsePortAi.xml</import_port_type>
  <import_port_type>Fw/Log/LogPortAi.xml</import_port_type>
  <import_port_type>Fw/Log/LogTextPortAi.xml</import_port_type>
  <import_port_type>Fw/Time/TimePortAi.xml</import_port_type>
  <import_port_type>MotionActivatedLight/GoalMonitorPort/PortBPortAi.xml</import_port_type>
  <import_port_type>MotionActivatedLight/GoalMonitorPort/PortFPortAi.xml</import_port_type>
  <import_port_type>MotionActivatedLight/GoalMonitorPort/PortUPortAi.xml</import_port_type>
  <import_port_type>MotionActivatedLight/GoalMonitorPort/VarReqPortAi.xml</import_port_type>

  <ports>
    <port name="BIn" data_type="MotionActivatedLight::PortB" kind="sync_input" max_number="1"/>
    <port name="FIn" data_type="MotionActivatedLight::PortF" kind="sync_input" max_number="1"/>
    <port name="UIn" data_type="MotionActivatedLight::PortU" kind="sync_input" max_number="1"/>
    <port name="cmdIn" data_type="Fw::Cmd" kind="input" role="Cmd" max_number="1"/>
    <port name="cmdRegOut" data_type="Fw::CmdReg" kind="output" role="CmdRegistration" max_number="1"/>
    <port name="cmdResponseOut" data_type="Fw::CmdResponse" kind="output" role="CmdResponse" max_number="1"/>
    <port name="eventOut" data_type="Fw::Log" kind="output" role="LogEvent" max_number="1"/>
    <port name="textEventOut" data_type="Fw::LogText" kind="output" role="LogTextEvent" max_number="1"/>
    <port name="timeGetOut" data_type="Fw::Time" kind="output" role="TimeGet" max_number="1"/>
    <port name="varReq2Out" data_type="MotionActivatedLight::VarReq" kind="output" max_number="1"/>
    <port name="varReq4Out" data_type="MotionActivatedLight::VarReq" kind="output" max_number="1"/>
    <port name="varReq5Out" data_type="MotionActivatedLight::VarReq" kind="output" max_number="1"/>
  </ports>

  <commands>
    <command kind="async" opcode="0x0" mnemonic="monitor" full="assert"/>
  </commands>

  <events>
    <event id="0x0" name="SATISFIED" severity="ACTIVITY_HI" format_string="Goal No.%u satisfied">
      <args>
        <arg name="number" type="U32"/>
      </args>
    </event>
    <event id="0x1" name="NOTSATISFIED" severity="ACTIVITY_HI" format_string="Goal No.%u not satisfied">
      <args>
        <arg name="number" type="U32"/>
      </args>
    </event>
    <event id="0x2" name="RECVB" severity="ACTIVITY_HI" format_string="Boolean variable No.%u received: %d">
      <args>
        <arg name="number" type="U32"/>
        <arg name="value" type="bool"/>
      </args>
    </event>
    <event id="0x3" name="RECVF" severity="ACTIVITY_HI" format_string="Float variable No.%u received: %g">
      <args>
        <arg name="number" type="U32"/>
        <arg name="value" type="F32"/>
      </args>
    </event>
    <event id="0x4" name="RECVU" severity="ACTIVITY_HI" format_string="Integer variable No.%u received: %u">
      <args>
        <arg name="number" type="U32"/>
        <arg name="value" type="U32"/>
      </args>
    </event>
  </events>

</component>
